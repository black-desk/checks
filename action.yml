name: 'Checks'
description: 'Some checks I apply to my personal projects.'
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Find trailing spaces
      run: find . -type f -not -path "./.git/*" -exec grep -Iq . {} \; -print | xargs -L1 sed -i 's/[[:space:]]*$//'
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        fail_on_error: true
    - name: Run update-dependabot
      run: |
        pushd `mktemp -d` &&
        version=$(
          curl -s https://api.github.com/repos/black-desk/update-dependabot/releases/latest |
          python3  -c 'import sys, json; print(json.load(sys.stdin)["tag_name"].lstrip("v"))'
        ) &&
        curl -LJ "https://github.com/black-desk/update-dependabot/releases/latest/download/update-dependabot_${version}_linux_amd64.tar.gz" | tar zxf - &&
        ./update-dependabot -D "$GITHUB_WORKSPACE" &&
        popd
      shell: bash
    - name: Check if dependabot.yml should be updated
      run: test -z "$(git status --porcelain)" || ( echo '.github/dependabot.yml should be updated, check https://github.com/black-desk/update-dependabot' && false )
      shell: bash
    - name: Checkout history
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Lint commit message
      uses: wagoid/commitlint-github-action@v5
      with:
        configFile:
          .format/commitlint.config.js
    - name: Run cmake-format
      run: |
        if [ -d .format ] && [ -n "$(find . -not -path './.format/*' \( -type f -o -type l \) -name '.cmake-format')" ] ; then
          sudo apt install -y pip &&
          pip install --user cmake-format pyyaml &&
          find . -type f -a \( -name CMakeLists.txt -o -iname '*.cmake' \) -exec cmake-format -i \{\} \;
        fi
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: cmake-format
        fail_on_error: true
    - name: Run clang-format
      run: |
        if [ -d .format ] && [ -n "$(find . -not -path './.format/*' \( -type f -o -type l \) -name '.clang-format')" ] ; then
          sudo apt install -y clang-format &&
          find . -type f -a \( -iname '*.c' -o -iname '*.cpp' -o -iname '*.cxx' -o -iname '*.h' -o -iname '*.hpp' \) -exec clang-format -i \{\} \;
        fi
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: clang-format
        fail_on_error: true
