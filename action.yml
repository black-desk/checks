name: 'Checks'
description: 'Some checks I apply to my personal projects.'
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Checkout .format
      run: |
        if [ -d .format ] ; then
          git submodule update --init .format
        fi
      shell: bash
    - name: Find trailing spaces
      run: find . -type f -not -path "./.git/*" -not -path "./external/*" -exec grep -Iq . {} \; -print | xargs -L1 sed -i 's/[[:space:]]*$//'
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        fail_on_error: true
    - name: Run update-dependabot
      run: |
        pushd `mktemp -d` &&
        version=$(
          curl -s https://api.github.com/repos/black-desk/update-dependabot/releases/latest |
          python3  -c 'import sys, json; print(json.load(sys.stdin)["tag_name"].lstrip("v"))'
        ) &&
        curl -LJ "https://github.com/black-desk/update-dependabot/releases/latest/download/update-dependabot_${version}_linux_amd64.tar.gz" | tar zxf - &&
        ./update-dependabot -D "$GITHUB_WORKSPACE" &&
        popd
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: update-dependabot
        fail_on_error: true
    - name: Is it a go project?
      id: isGoProject
      run: |
        if [ -e ./go.mod ] ; then
          echo "go=YES" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Set up Go
      if: steps.isGoProject.outputs.go == 'YES'
      uses: actions/setup-go@v5
      with:
        go-version: stable
        cache: true
        cache-dependency-path: ${{github.workspace}}/go.sum
    - name: Run gofmt
      if: steps.isGoProject.outputs.go == 'YES'
      run: |
        go fmt ./...
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: go fmt
        fail_on_error: true
    - name: Run cmake-format
      run: |
        if [ -d .format ] && [ -n "$(find . -not -path './.format/*' \( -type f -o -type l \) -name '.cmake-format.py')" ] ; then
          sudo apt update && sudo apt install -y pip &&
          pip install --user cmake-format pyyaml &&
          find . -type f -a \( -name CMakeLists.txt -o -iname '*.cmake' \) -exec cmake-format -i \{\} \;
        fi
      shell: bash
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: cmake-format
        fail_on_error: true
    - name: Find clang-format files
      run: |
        if [ -f .clang-format ]; then
          echo "NEED_CLANG_FORMAT=True" >> $GITHUB_ENV
        fi
      shell: bash
    - name: Run clang-format
      continue-on-error: true
      uses: DoozyX/clang-format-lint-action@v0.17
      if: ${{ env.NEED_CLANG_FORMAT == 'True' }}
      with:
        source: '.'
        exclude: './third_party ./external ./3rd_party'
        extensions: 'c,cpp,cxx,cc,h,hpp,hh'
        clangFormatVersion: 16
        inplace: True
    - name: Generate suggestion by reviewdog
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: clang-format
        fail_on_error: true
    - name: Generate suggestion from shellcheck by reviewdog
      uses: reviewdog/action-shellcheck@v1
      with:
        reporter: github-pr-review
    - name: Generate suggestion from shfmt by reviewdog
      uses: black-desk/action-shfmt@blackdesk/main
      with:
        shfmt_flags: '-i 0'
    - name: Run go build and test
      if: steps.isGoProject.outputs.go == 'YES'
      run: |
        go build -v ./... &&
        export COVER_DIR=/tmp/io.github.black-desk.checks &&
        mkdir -p $COVER_DIR &&
        go test ./... -v --ginkgo.vv -coverprofile=${COVER_DIR}/go-test-cover.out &&
        go tool cover -func=${COVER_DIR}/go-test-cover.out -o ${COVER_DIR}/go-test-cover.txt &&
        echo golang coverage report > $GITHUB_STEP_SUMMARY &&
        echo '```' >> $GITHUB_STEP_SUMMARY &&
        cat ${COVER_DIR}/go-test-cover.out >> $GITHUB_STEP_SUMMARY &&
        echo '```' >> $GITHUB_STEP_SUMMARY
      shell: bash
    - name: Checkout histroy
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Lint commit message
      uses: wagoid/commitlint-github-action@v6
      with:
        configFile:
          .format/commitlint.config.mjs
